{"ast":null,"code":"var _jsxFileName = \"/Users/andyleonardi/Downloads/GA_course/Project 2 - Boardgames ROI Analytics/boardgame-roi-stats/boardgame-roi-analytics/src/App.js\",\n  _s = $RefreshSig$();\n// Import packages & hooks\nimport { Routes, Route } from \"react-router-dom\";\nimport { useSate, useEffect, useState } from \"react\";\nimport { xml2js } from \"xml-js\";\n\n// Import components\nimport Header from \"./components/Header\";\nimport Homepage from \"./pages/Homepage\";\nimport Collections from \"./pages/Collections\";\nimport Analytics from \"./pages/Analytics\";\nimport gamesArr from \"./gameCollection\";\n\n// Import styles\nimport \"./App.css\";\n\n// BGG API Paths\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst bggCollectionPath = \"https://api.geekdo.com/xmlapi/collection/\"; // for getting collections\n\nfunction App() {\n  _s();\n  const [bggUserId, setBggUserId] = useState(\"andyleonardi\");\n\n  // Try to mount API first, but for working version only pull API data when user submit form\n  useEffect(() => {\n    const collectionPathToPull = `${bggCollectionPath}${bggUserId}`;\n    console.log(\"API Path: \", collectionPathToPull);\n    const fetchBGGCollectionData = async () => {\n      const res = await fetch(collectionPathToPull);\n      const xmlData = await res.text();\n      console.log(\"Pulled XML: \", res);\n      // const data = xml2json(res, { compact: false, spaces: 4 });\n      // console.log(\"Converted data: \", data);\n    };\n\n    fetchBGGCollectionData();\n  }, [bggUserId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/collections\",\n          element: /*#__PURE__*/_jsxDEV(Collections, {\n            allGames: gamesArr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/analytics\",\n          element: /*#__PURE__*/_jsxDEV(Analytics, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PMlv1zy4NAsb1YJEjNOMalgF6FU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Routes","Route","useSate","useEffect","useState","xml2js","Header","Homepage","Collections","Analytics","gamesArr","jsxDEV","_jsxDEV","bggCollectionPath","App","_s","bggUserId","setBggUserId","collectionPathToPull","console","log","fetchBGGCollectionData","res","fetch","xmlData","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","allGames","_c","$RefreshReg$"],"sources":["/Users/andyleonardi/Downloads/GA_course/Project 2 - Boardgames ROI Analytics/boardgame-roi-stats/boardgame-roi-analytics/src/App.js"],"sourcesContent":["// Import packages & hooks\nimport { Routes, Route } from \"react-router-dom\";\nimport { useSate, useEffect, useState } from \"react\";\nimport { xml2js } from \"xml-js\";\n\n// Import components\nimport Header from \"./components/Header\";\nimport Homepage from \"./pages/Homepage\";\nimport Collections from \"./pages/Collections\";\nimport Analytics from \"./pages/Analytics\";\nimport gamesArr from \"./gameCollection\";\n\n// Import styles\nimport \"./App.css\";\n\n// BGG API Paths\nconst bggCollectionPath = \"https://api.geekdo.com/xmlapi/collection/\"; // for getting collections\n\nfunction App() {\n  const [bggUserId, setBggUserId] = useState(\"andyleonardi\");\n\n  // Try to mount API first, but for working version only pull API data when user submit form\n  useEffect(() => {\n    const collectionPathToPull = `${bggCollectionPath}${bggUserId}`;\n    console.log(\"API Path: \", collectionPathToPull);\n\n    const fetchBGGCollectionData = async () => {\n      const res = await fetch(collectionPathToPull);\n      const xmlData = await res.text();\n      console.log(\"Pulled XML: \", res);\n      // const data = xml2json(res, { compact: false, spaces: 4 });\n      // console.log(\"Converted data: \", data);\n    };\n\n    fetchBGGCollectionData();\n\n  }, [bggUserId]);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<Homepage />} />\n          <Route\n            path=\"/collections\"\n            element={<Collections allGames={gamesArr} />}\n          />\n          <Route path=\"/analytics\" element={<Analytics />} />\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}